<archimate:Artifact
    xmlns:archimate="http://www.archimatetool.com/archimate"
    name="Especificaciones Despliegue Versión 0.1"
    id="id-6848039081c248b2a062c8f072543ae7"
    documentation="**Documentación Técnica: Configuración y Despliegue en JEP sobre OpenShift**&#xA;&#xA;**1\. Introducción**&#xA;&#xA;El presente documento describe las configuraciones requeridas y las consideraciones técnicas para los despliegues en el clúster de la JEP en OpenShift. Este clúster está configurado con Service Mesh y utiliza Istio para habilitar capacidades de observabilidad, gestión de tráfico y seguridad. A continuación, se presentan las configuraciones clave, las características del clúster y ejemplos relevantes.&#xA;&#xA;**2\. Configuración del Clúster de OpenShift**&#xA;&#xA;Este clúster de OpenShift incluye características específicas que condicionan el despliegue de aplicaciones:&#xA;&#xA;**Características generales:**&#xA;&#xA;- **Acceso:** La consola se encuentra en &lt;https://console-openshift-console.apps.interopera.jep.gov.co/k8s/cluster/projects>.&#xA;- **VPN:** Gateway Remoto: 190.144.149.224.&#xA;- **Nodo asignado:** El nodo para los despliegues: **votan.interopera.jep.gov.co**.&#xA;- **Entorno de Despliegue:** desarrollo-sg&#xA;- **Inyección de sidecars mediante Istio:** Configurada por namespace con la anotación istio-injection: enabled&#xA;&#xA;**Configuraciones del entorno:**&#xA;&#xA;- **Service Mesh habilitado:** Gestionado por Istio, para el marco de enrutamiento y proxy del tráfico entre servicios.&#xA;- **Istio Injection:** Activado a nivel del namespace **desarrollo-sg** con la anotación:&#xA;&#xA;```&#xA;istio-injection: enabled&#xA;```&#xA;&#xA;Esta configuración permite que un sidecar sea inyectado automáticamente en los Pods dentro del namespace.&#xA;&#xA;**3\. Consideraciones de Configuración**&#xA;&#xA;**Inyección de Sidecar (Istio Injection):**&#xA;&#xA;La inyección de sidecar es fundamental para integrar los Pods en el Service Mesh. Para habilitarla, se debe incluir la siguiente anotación en los Pods y configurarla a nivel de namespace:&#xA;&#xA;```&#xA;annotations:&#xA;&#xA;sidecar.istio.io/inject: &quot;true&quot;&#xA;```&#xA;&#xA;**Asignación de Nodo Específico:**&#xA;&#xA;Para garantizar que los Pods se ejecuten en el nodo asignado (votan.interopera.jep.gov.co), se debe agregar el siguiente fragmento en la especificación del Pod:&#xA;&#xA;```&#xA;nodeSelector:&#xA;&#xA;kubernetes.io/hostname: votan.interopera.jep.gov.co&#xA;```&#xA;&#xA;**Configuración del Service:**&#xA;&#xA;El Service Mesh requiere un Service que defina claramente los puertos y protocolos que se exponen. Por ejemplo:&#xA;&#xA;```&#xA;spec:&#xA;&#xA;selector:&#xA;&#xA;app: ejemplo-app&#xA;&#xA;ports:&#xA;&#xA;\- protocol: TCP&#xA;&#xA;port: 9000&#xA;&#xA;targetPort: 9000&#xA;```&#xA;&#xA;No es necesario definir el tipo de servicio “type: LoadBalancer/ClusterIP” ya que con el Service Mesh habilitado, la configuración entre servicios se gestiona internamente a través del proxy sidecar (controlado por Istio). Este proxy opera sobre los servicios internos tipo ClusterIP.&#xA;&#xA;**4\. Ejemplo de Configuraciones Importantes**&#xA;&#xA;**Fragmento de Deployment:**&#xA;&#xA;Incluye configuraciones críticas como la inyección de Istio, restricciones de recursos y selección del nodo:&#xA;&#xA;```&#xA;metadata:&#xA;&#xA;annotations:&#xA;&#xA;sidecar.istio.io/inject: &quot;true&quot;&#xA;&#xA;spec:&#xA;&#xA;nodeSelector:&#xA;&#xA;kubernetes.io/hostname: votan.interopera.jep.gov.co&#xA;&#xA;containers:&#xA;&#xA;\- resources:&#xA;&#xA;requests:&#xA;&#xA;memory: &quot;20Mi&quot;&#xA;&#xA;cpu: &quot;100m&quot;&#xA;&#xA;limits:&#xA;&#xA;memory: &quot;80Mi&quot;&#xA;&#xA;cpu: &quot;120m&quot;&#xA;```&#xA;&#xA;**Fragmento de Service:**&#xA;&#xA;Define el puerto y el protocolo para la comunicación del Pod:&#xA;&#xA;```&#xA;spec:&#xA;&#xA;ports:&#xA;&#xA;\- protocol: TCP&#xA;&#xA;port: 9000&#xA;&#xA;targetPort: 9000&#xA;&#xA;selector:&#xA;&#xA;&#xA;app: ejemplo-app&#xA;```&#xA;&#xA;**5\. Limitaciones del Entorno**&#xA;&#xA;1. **Dependencia del Service Mesh:**  &#xA;    Todos los Pods deben estar configurados adecuadamente para aprovechar el Service Mesh. Un error en la configuración podría provocar problemas de conectividad o trazabilidad.&#xA;2. **Recursos restringidos:**  &#xA;    Los límites de memoria y CPU deben ser estrictamente respetados para evitar conflictos de recursos en el clúster.&#xA;3. **Asignación de nodo fijo:**  &#xA;    Aunque garantiza estabilidad, la dependencia de un nodo específico puede ser una desventaja si el nodo no está disponible.&#xA;&#xA;**6\. Conclusión**&#xA;&#xA;El clúster de OpenShift descrito está configurado para gestionar aplicaciones bajo un marco controlado, con Service Mesh e Istio como componentes clave. Las configuraciones presentadas aseguran que los despliegues cumplan con los estándares definidos, aunque es fundamental monitorear y ajustar según las necesidades específicas para el proyecto."/>
